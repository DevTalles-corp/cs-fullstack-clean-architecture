@page "/register"

@inject ISender Sender;
@inject NavigationManager NavigationManager;

<PageTitle>Registro de usuario</PageTitle>

<div class="mx-auto max-w-screen-xl px-4 py-16 sm:px-6 lg:px-8">
    <div class="mx-auto max-w-lg">
        <div class="mb-8">
            <h1 class="text-center text-2xl font-bold text-indigo-600 sm:text-3xl">Registro de Usuario</h1>
            <p class="mx-auto mt-4 max-w-md text-center text-gray-500">
                Crea tu cuenta para comenzar a compartir tus ideas
            </p>
        </div>

        <EditForm Model="UserModel" OnValidSubmit="HandleSubmit" FormName="RegisterUserForm"
            class="mb-0 space-y-4 rounded-lg p-4 shadow-lg sm:p-6 lg:p-8 bg-white">
            <DataAnnotationsValidator />

            <div>
                <label for="name" class="block text-sm font-medium text-gray-700 mb-2">Nombre de usuario</label>
                <div class="relative">
                    <InputText id="name" @bind-Value="UserModel.UserName"
                        class="w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                    <span class="absolute inset-y-0 end-0 grid place-content-center px-4">
                        <svg class="size-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </span>
                </div>
                <ValidationMessage For="() => UserModel.UserName" class="text-sm text-red-600 mt-1" />
            </div>

            <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Correo electrónico</label>
                <div class="relative">
                    <InputText id="email" @bind-Value="UserModel.Email"
                        class="w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                    <span class="absolute inset-y-0 end-0 grid place-content-center px-4">
                        <svg class="size-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207">
                            </path>
                        </svg>
                    </span>
                </div>
                <ValidationMessage For="() => UserModel.Email" class="text-sm text-red-600 mt-1" />
            </div>

            <div>
                <label for="password" class="block text-sm font-medium text-gray-700 mb-2">Contraseña</label>
                <div class="relative">
                    <InputText id="password" type="password" @bind-Value="UserModel.Password"
                        class="w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                    <span class="absolute inset-y-0 end-0 grid place-content-center px-4">
                        <svg class="size-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z">
                            </path>
                        </svg>
                    </span>
                </div>
                <ValidationMessage For="() => UserModel.Password" class="text-sm text-red-600 mt-1" />
            </div>

            <div>
                <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-2">Confirmar
                    contraseña</label>
                <div class="relative">
                    <InputText id="confirmPassword" type="password" @bind-Value="UserModel.ConfirmPassword"
                        class="w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                    <span class="absolute inset-y-0 end-0 grid place-content-center px-4">
                        <svg class="size-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </span>
                </div>
                <ValidationMessage For="() => UserModel.ConfirmPassword" class="text-sm text-red-600 mt-1" />
            </div>

            <button type="submit"
                class="block w-full rounded-lg bg-indigo-600 px-5 py-3 text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring focus:ring-indigo-300 active:bg-indigo-800 transition-colors">
                Registrar Usuario
            </button>
        </EditForm>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="mt-4 rounded-lg bg-red-50 p-4 border border-red-200">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="size-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.08 16.5c-.77.833.192 2.5 1.732 2.5z">
                            </path>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-red-700">@errorMessage</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@code {
    [SupplyParameterFromForm]
    private RegisterUserModel UserModel { get; set; } = new();
    private string errorMessage = string.Empty;

    async Task HandleSubmit()
    {
        var command = new RegisterUserCommand
        {
            UserName = UserModel.UserName,
            UserEmail = UserModel.Email,
            Password = UserModel.Password
        };
        var result = await Sender.Send(command);
        if (result.IsSuccessful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            errorMessage = result.ErrorMessage ?? "Ha ocurrido un error en el registro.";
        }
    }
}